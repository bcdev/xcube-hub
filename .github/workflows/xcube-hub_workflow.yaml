name: xcube-hub workflow

on:
  push:
  release:
    types: [published]

jobs:
  unittest:
    runs-on: ubuntu-latest
    env:
      UNITTEST_SKIP_K8S: 0
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          channels: conda-forge
          activate-environment: xcube-hub
          environment-file: environment.yml
      - name: setup xcube-hub
        shell: bash -l {0}
        run: |
          conda info
          conda list
          python setup.py develop
      - name: unittest-xcube-hub
        shell: bash -l {0}
        run: |
          pip install pytest pytest-cov
          mamba install -c conda-forge  flask-testing moto requests-mock

          pytest --cov=./ --cov-report=xml
      - uses: codecov/codecov-action@v1
        with:
          verbose: true # optional (default = false)
  build-docker-image:
    runs-on: ubuntu-latest
    name: build-docker-image
    needs: unittest
    env:
      APP_NAME: xcube-hub
      ORG_NAME: bcdev
    steps:
      - name: git-checkout
        uses: actions/checkout@v2
      - name: get-release-tag
        id: release
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: info
        id: info
        run: |
          echo "TAG: ${{ steps.release.outputs.tag }}"
          echo "EVENT: ${{ github.event_name }}"
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: build-push-docker-image-latest
        if: ${{ github.event_name == 'push' && steps.release.outputs.tag == 'master'  }}
        with:
          image: ${{ env.ORG_NAME }}/${{ env.APP_NAME }}
          tags: master, latest
          registry: quay.io
          username: ${{ secrets.QUAY_DOCKER_REPO_USERNAME }}
          password: ${{ secrets.QUAY_DOCKER_REPO_PASSWORD }}
      - uses: mr-smithers-excellent/docker-build-push@v5
        name: build-push-docker-image-release
        if: ${{ github.event_name == 'release' }}
        with:
          image: ${{ env.ORG_NAME }}/${{ env.APP_NAME }}
          tags: ${{ steps.release.outputs.tag }}
          registry: quay.io
          username: ${{ secrets.QUAY_DOCKER_REPO_USERNAME }}
          password: ${{ secrets.QUAY_DOCKER_REPO_PASSWORD }}
      - name: docker-info
        run: |
          skopeo inspect docker://${{ env.ORG_NAME }}/${{ env.APP_NAME }}:${{ steps.release.outputs.tag }} | jq '.Digest'

  update-version-xcube-hub:
    env:
      PUSH: 1
    runs-on: ubuntu-latest
    needs: build-docker-image
    name: update-xcube-hub-tag
    steps:
      - name: git-checkout
        uses: actions/checkout@v2
      - uses: actions/checkout@v2
        with:
          repository: bc-org/k8s-configs
          token: ${{ secrets.API_TOKEN_GITHUB }}
          path: k8s
      - name: get-release-tag
        id: release
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: deployment-phase
        id: deployment-phase
        uses: ./.github/actions/determine-phase
        with:
          event_name: ${{ github.event_name }}
          tag: ${{ steps.release.outputs.tag }}
      - name: get-hash
        id: get-hash
        run: |
          HASH=$(skopeo inspect docker://quay.io/bcdev/xcube-hub:v2.1.0 | jq '.Digest')
          echo ::set-output name=hash::$HASH
      - name: info
        run: |
          echo "Event: ${{ github.event_name }}"
          echo "Deployment Stage: ${{ steps.deployment-phase.outputs.phase }}"

          echo "Release Tag: ${{ steps.release.outputs.tag }}"
          echo "Deployment Release Tag: ${{ steps.deployment-phase.outputs.tag }}"
          echo "Deployment Digest: ${{ steps.get-hash.outputs.hash }}"
      - name: set-version-tag-cate
        uses: bc-org/update-application-version-tags@main
        with:
          app: xcube-hub
          phase: ${{ steps.deployment-phase.outputs.phase }}
          delimiter: ' '
          tag: ${{ steps.deployment-phase.outputs.tag }}
          working-directory: ./k8s/cate/helm
      - name: cat-result
        working-directory: ./k8s/cate/helm
        run: |
          head values-dev.yaml
          head values-stage.yaml
          head values-prod.yaml
      - name: set-version-tag-xcube-gen
        uses: bc-org/update-application-version-tags@main
        with:
          app: xcube-hub
          phase: ${{ steps.deployment-phase.outputs.phase }}
          delimiter: ' '
          tag: ${{ steps.deployment-phase.outputs.tag }}
          hash: ${{ steps.get-hash.outputs.hash }}
          working-directory: ./k8s/xcube-gen/helm
      - name: cat-result
        working-directory: ./k8s/xcube-gen/helm
        run: |
          head values-dev.yaml
          head values-stage.yaml
          head values-prod.yaml
      - name: Pushes to another repository
        if: ${{ env.PUSH == 1 }}
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: 'k8s'
          destination-github-username: 'bc-org'
          destination-repository-name: 'k8s-configs'
          user-email: bcdev@brockmann-consult.de
          target-branch: main
          commit-message: ${{ github.event.release }}. Set version to ${{ steps.release.outputs.tag }}
