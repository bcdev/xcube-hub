name: xcube-hub workflow

on:
  push:
  release:
    types: [published]

jobs:
#  unittest:
#    runs-on: ubuntu-latest
#    env:
#      UNITTEST_SKIP_K8S: 0
#    steps:
#      - uses: actions/checkout@v2
#      - uses: conda-incubator/setup-miniconda@v2
#        with:
#          mamba-version: "*"
#          channels: conda-forge
#          activate-environment: xcube-hub
#          environment-file: environment.yml
#      - name: setup xcube-hub
#        shell: bash -l {0}
#        run: |
#          conda info
#          conda list
#          python setup.py develop
#      - name: unittest-xcube-hub
#        shell: bash -l {0}
#        run: |
#          pip install pytest pytest-cov
#          mamba install -c conda-forge  flask-testing moto requests-mock
#
#          pytest --cov=./ --cov-report=xml
#      - uses: codecov/codecov-action@v1
#        with:
#          verbose: true # optional (default = false)
#  build-docker-image:
#    runs-on: ubuntu-latest
#    name: build-docker-image
#    needs: unittest
#    env:
#      APP_NAME: xcube-hub
#      ORG_NAME: bcdev
#    steps:
#      - name: git-checkout
#        uses: actions/checkout@v2
#      - name: get-release-tag
#        id: release
#        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
#      - name: info
#        id: info
#        run: |
#          echo "TAG: ${{ steps.release.outputs.tag }}"
#          echo "EVENT: ${{ github.event_name }}"
#      - uses: mr-smithers-excellent/docker-build-push@v5
#        name: build-push-docker-image-latest
#        if: ${{ github.event_name == 'push' && steps.release.outputs.tag == 'master'  }}
#        with:
#          image: ${{ env.ORG_NAME }}/${{ env.APP_NAME }}
#          tags: master, latest
#          registry: quay.io
#          username: ${{ secrets.QUAY_DOCKER_REPO_USERNAME }}
#          password: ${{ secrets.QUAY_DOCKER_REPO_PASSWORD }}
#      - uses: mr-smithers-excellent/docker-build-push@v5
#        name: build-push-docker-image-release
#        if: ${{ github.event_name == 'release' }}
#        with:
#          image: ${{ env.ORG_NAME }}/${{ env.APP_NAME }}
#          tags: ${{ steps.release.outputs.tag }}
#          registry: quay.io
#          username: ${{ secrets.QUAY_DOCKER_REPO_USERNAME }}
#          password: ${{ secrets.QUAY_DOCKER_REPO_PASSWORD }}
  update-version-xcube-hub:
    runs-on: ubuntu-latest
    #    needs: build-docker-image
    name: update-xcube-hub-tag
    steps:
#      - name: git-checkout
#        uses: actions/checkout@v2
#        with:
#          path: main
      - uses: actions/checkout@v2
        with:
          repository: bc-org/k8s-configs
          token: ${{ secrets.API_TOKEN_GITHUB }}
          path: k8s
      - run: ls -al k8s
      - name: get-release-tag
        id: release
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: update-version-prerelease
        if: ${{ github.event.release == 'released' ||  github.event.release == 'prereleased' }}
        working-directory: ./cate/helm
        run: |
          sed -i 's/xcube-hub-tag\s.*$/xcube-hub-tag ${{ steps.release.outputs.tag }}/g' values-stage.yaml
      - name: update-version-release
        if: ${{ github.event.release == 'released' }}
        working-directory: ./cate/helm
        run: |
          sed -i 's/xcube-hub-tag\s.*$/xcube-hub-tag ${{ steps.release.outputs.tag }}/g' values-stage.yaml
          sed -i 's/xcube-hub-tag\s.*$/xcube-hub-tag ${{ steps.release.outputs.tag }}/g' values-prod.yaml
      - name: update-version-push
        if: ${{ github.event_name == 'push' }}
        working-directory: ./cate/helm
        run: |
          sed -i 's/xcube-hub-tag\s.*$/xcube-hub-tag latest/g' values-dev.yaml
      - name: Pushes to another repository
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: '.'
          destination-github-username: 'bc-org'
          destination-repository-name: 'k8s-configs'
          user-email: bcdev@brockmann-consult.de
          target-branch: main
