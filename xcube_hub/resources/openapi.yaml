openapi: 3.0.0
info:
  contact:
    email: info@brockmann-consult.de
  description: Restful API for handling xcube Services
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: xcube Generator API
  version: 2.1.0.dev2
servers:
  - url: https://xcube-gen.brockmann-consult.de/api/v2
  - url: https://stage.xcube-gen.brockmann-consult.de/api/v2
  - url: https://xcube-geodb.brockmann-consult.de/api/v2
  - url: https://stage.xcube-geodb.brockmann-consult.de/api/v2
  - url: https://cate.climate.esa.int/api/v2
  - url: https://stage.cate.climate.esa.int/api/v2
tags:
  - name: cubegens
  - name: callbacks
  - name: oauth
  - name: services
  - name: webapis
paths:
  /:
    get:
      description: Get service info
      operationId: get_service_info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServiceInformationResponse'
          description: service information
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: api error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: service not found
      summary: get service info
      x-openapi-router-controller: xcube_hub.controllers.default
  /webapis:
    get:
      description:
        Get running webapis
      operationId: get_webapis
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiWebapisResponse'
          description: Create a cubegen
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Service not found
      #      security:
      #        - oAuthorization:
      #            - manage:webapis
      summary: Create a cate service instance
      tags:
        - webapis
      x-openapi-router-controller: xcube_hub.controllers.webapis
  /users/{user_id}/webapis:
    get:
      description: |
        Get webapi information
      operationId: get_user_webapi
      parameters:
        - description: User ID
          explode: false
          in: path
          name: user_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Create a cubegen
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Service not found
#      security:
#        - oAuthorization:
#            - manage:users
      summary: Create a cate service instance
      tags:
        - users
      x-openapi-router-controller: xcube_hub.controllers.users
    post:
      description: |
        Create a webapi
      operationId: put_user_webapi
      parameters:
        - description: User ID
          explode: false
          in: path
          name: user_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Create a webapi
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Too many webapis running
#      security:
#        - oAuthorization:
#            - manage:users
      summary: Create a cate service instance
      tags:
        - users
      x-openapi-router-controller: xcube_hub.controllers.users
    delete:
      description: |
        Delete a webapi
      operationId: delete_user_webapi
      parameters:
        - description: User ID
          explode: false
          in: path
          name: user_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
          description: Create a cubegen
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Service not found
#      security:
#        - oAuthorization:
#            - manage:users
      summary: Create a webapi instance
      tags:
        - users
      x-openapi-router-controller: xcube_hub.controllers.users
  /services:
    get:
      description: |
        get a list of services. Currently, a service can be either of
        - xcube_gen
        - xcube_geodb
        - xcube_geoserv
      operationId: get_services
      responses:
        "200":
          description: Get a list of services
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServicesResponse'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Application not found
      summary: Manage services
      tags:
        - services
      x-openapi-router-controller: xcube_hub.controllers.services
  /services/{service_id}/subscriptions:
    put:
      description: |
        Register a subscription to a service. A service can either of be
        - xcube_gen
        - xcube_geodb
        - xcube_geoserv
      operationId: put_subscription_to_service
      parameters:
        - description: Service ID
          explode: false
          in: path
          name: service_id
          required: true
          schema:
            type: string
            enum:
              - xcube_gen
              - xcube_geodb
              - xcube_geoserv
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subscription'
      responses:
        "200":
          description: Register a subscription to a service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSubscriptionResponse'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Subscripion not found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Subscription exists
      security:
        - oAuthorization:
            - read:users
            - create:users
      summary: Manage subscriptions for serices
      tags:
        - services
      x-openapi-router-controller: xcube_hub.controllers.services
  /services/{service_id}/subscriptions/{subscription_id}:
    get:
      description: |
        Get info about a subscription of a service. A service can either of be
        - xcube_gen
        - xcube_geodb
        - xcube_geoserv
      operationId: get_subscription_from_service
      parameters:
        - description: Service ID
          explode: false
          in: path
          name: service_id
          required: true
          schema:
            type: string
            enum:
              - xcube_gen
              - xcube_geodb
              - xcube_geoserv
          style: simple
        - description: Subscription ID
          explode: false
          in: path
          name: subscription_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          description: User to an application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSubscriptionResponse'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Application not found
      security:
        - oAuthorization:
            - read:users
            - create:users
      summary: Manage subscriptions
      tags:
        - services
      x-openapi-router-controller: xcube_hub.controllers.services
    delete:
      description: |
        Delete a subscription from a service.  A service can either of be
        - xcube_gen
        - xcube_geodb
        - xcube_geoserv
      operationId: delete_subscription_from_service
      parameters:
        - description: Application ID
          explode: false
          in: path
          name: service_id
          required: true
          schema:
            type: string
            enum:
              - xcube_gen
              - xcube_geodb
              - xcube_geoserv
          style: simple
        - description: User ID
          explode: false
          in: path
          name: subscription_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          description: Subscription removed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiSubscriptionResponse'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Service not found
      security:
        - oAuthorization:
            - read:users
            - create:users
      summary: Delete a subscription from a service
      tags:
        - services
      x-openapi-router-controller: xcube_hub.controllers.services
  /cubegens:
    delete:
      description: |
        Delete all cubegens
      operationId: delete_cubegens
      responses:
        "200":
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: User not found
      security:
        - oAuthorization:
            - manage:cubegens
      summary: Delete all cubegens
      tags:
        - cubegens
      x-openapi-router-controller: xcube_hub.controllers.cubegens
    get:
      description: |
        List user cubegens
      operationId: get_cubegens
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCubegensResponse'
          description: List cubegens
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: User not found
      security:
        - oAuthorization:
            - manage:cubegens
      summary: List cubegens
      tags:
        - cubegens
      x-openapi-router-controller: xcube_hub.controllers.cubegens
    put:
      description: |
        Create a jcubegen
      operationId: create_cubegen
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_code:
                  type: string
                  format: binary
                body:
                  type: string
        description: Cubegen configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCubegenResponse'
          description: Create a cubegen
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: User not found
      security:
        - oAuthorization:
            - manage:cubegens
      summary: Create a cubegen
      tags:
        - cubegens
      x-openapi-router-controller: xcube_hub.controllers.cubegens
  /cubegens/code:
    put:
      description: |
        Create a cubegen passing user code and cube config as json and zip file
      operationId: create_cubegen_code
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                user_code:
                  type: string
                  format: binary
                body:
                  type: string
            encoding:
              user_code:
                contentType: application/zip
              body:
                contentType: application/json
        description: Cubegen configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCubegenResponse'
          description: Create a cubegen
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "413":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: User not found
      security:
        - oAuthorization:
            - manage:cubegens
      summary: Create a cubegen
      tags:
        - cubegens
      x-openapi-router-controller: xcube_hub.controllers.cubegens
  /cubegens/info:
    post:
      description: |
        Receive cost information of using a service
      operationId: get_cubegen_info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostConfig'
        description: Cost configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCubegenInfoResponse'
          description: costs for using the service
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: api error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: no cost information found
      security:
        - oAuthorization:
            - manage:cubegens
      summary: Receive cost information for runnning a cubegen
      tags:
        - cubegens
      x-openapi-router-controller: xcube_hub.controllers.cubegens
  /cubegens/{cubegen_id}:
    delete:
      description: |
        Delete a cubegen
      operationId: delete_cubegen
      parameters:
        - description: Cubegen ID
          explode: false
          in: path
          name: cubegen_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCubegenResponse'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: User not found
      security:
        - oAuthorization:
            - manage:cubegens
      summary: Delete a cubegen
      tags:
        - cubegens
      x-openapi-router-controller: xcube_hub.controllers.cubegens
    get:
      description: |
        List specific cubegen
      operationId: get_cubegen
      parameters:
        - description: Cubegen ID
          explode: false
          in: path
          name: cubegen_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCubegenResponse'
          description: User cubegen information
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: User not found
      security:
        - oAuthorization:
            - manage:cubegens
      summary: List specific cubegen
      tags:
        - cubegens
      x-openapi-router-controller: xcube_hub.controllers.cubegens
  /cubegens/{cubegen_id}/callbacks:
    put:
      description: Add a callbacks for a cubegen
      operationId: put_callback_by_cubegen_id
      parameters:
        - description: Cubegen ID
          explode: false
          in: path
          name: cubegen_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Callback'
        description: Callbacks
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCallbackResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: User not found
      security:
        - oAuthorization:
            - manage:cubegens
      summary: Add a callback for a cubegen
      tags:
        - callbacks
      x-openapi-router-controller: xcube_hub.controllers.callbacks
  /services/xcube_geoserv/collections:
    get:
      description: Manage GeoDB Collections
      operationId: get_all_collections
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiCollectionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Client ID not found
      summary: Get authorization token
      security:
        - oAuthorization:
            - manage:collections
      tags:
        - geoservice
      x-openapi-router-controller: xcube_hub.controllers.geoservice
  /services/xcube_geoserv/databases/{database_id}/collections:
    get:
      description: Manage GeoDB Collections
      operationId: get_collections
      parameters:
        - description: Database ID
          explode: false
          in: path
          name: database_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiCollectionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Client ID not found
      summary: Get authorization token
      security:
        - oAuthorization:
            - manage:collections
      tags:
        - geoservice
      x-openapi-router-controller: xcube_hub.controllers.geoservice
    put:
      description: Manage GeoDB Collections
      operationId: put_collection
      parameters:
        - description: Database ID
          explode: false
          in: path
          name: database_id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          application/json:
            schema:
              properties:
                collection_id:
                  type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCollectionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Client ID not found
      summary: Get authorization token
      security:
        - oAuthorization:
            - manage:collections
      tags:
        - geoservice
      x-openapi-router-controller: xcube_hub.controllers.geoservice
  /services/xcube_geoserv/databases/{database_id}/collections/{collection_id}:
    get:
      description: Manage GeoDB Collections
      operationId: get_collection
      parameters:
        - description: Database ID
          explode: false
          in: path
          name: database_id
          required: true
          schema:
            type: string
          style: simple
        - description: Collection ID
          explode: false
          in: path
          name: collection_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCollectionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Client ID not found
      summary: Get authorization token
      security:
        - oAuthorization:
            - manage:collections
      tags:
        - geoservice
      x-openapi-router-controller: xcube_hub.controllers.geoservice
    delete:
      description: Manage GeoDB Collections
      operationId: delete_collection
      parameters:
        - description: Database ID
          explode: false
          in: path
          name: database_id
          required: true
          schema:
            type: string
          style: simple
        - description: Collection ID
          explode: false
          in: path
          name: collection_id
          required: true
          schema:
            type: string
          style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCollectionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Client ID not found
      summary: Get authorization token
      security:
        - oAuthorization:
            - manage:collections
      tags:
        - geoservice
      x-openapi-router-controller: xcube_hub.controllers.geoservice
  /oauth/token:
    post:
      description: Get authorization token
      operationId: oauth_token_post
      requestBody:
        content:
          application/json:
            #          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OauthToken'
        description: OauthToken
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiOauthResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Api Error
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiErrorResponse'
          description: Client ID not found
      summary: Get authorization token
      tags:
        - oauth
      x-openapi-router-controller: xcube_hub.controllers.oauth
components:
  schemas:
    ApiResponse:
      type: object
    ApiErrorResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          required:
            - traceback
          properties:
            traceback:
              type: string
    ApiSubscriptionResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/Subscription'
    ApiWebapisResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            running_pods:
              type: integer
    ApiServicesResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: array
          items:
            $ref: '#/components/schemas/Service'
    ApiCubegenResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - $ref: '#/components/schemas/CubegenStatus'
    ApiCubegenInfoResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - $ref: '#/components/schemas/CubegenInfo'
    ApiCubegensResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            result:
              type: array
              items:
                $ref: '#/components/schemas/CubegenStatus'
    ApiServiceInformationResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/ServiceInformation'
    ApiCallbackResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/Callback'
    ApiCollectionResponse:
      allOf:
        - $ref: '#/components/schemas/ApiResponse'
        - type: object
          properties:
            result:
              $ref: '#/components/schemas/Collection'
    ApiOauthResponse:
      example:
        access_token: access_token
        token_type: token_type
      properties:
        access_token:
          type: string
        token_type:
          type: string
      required:
        - access_token
        - token_type
      type: object
    ServiceInformation:
      properties:
        name:
          type: string
        description:
          type: string
        version:
          type: string
        serverStartTime:
          format: date-time
          type: string
        serverCurrentTime:
          format: date-time
          type: string
        serverPID:
          type: integer
        chartVersion:
          type: string
        mockServices:
          type: string
        runLocal:
          type: boolean
      type: object
    CostConfig:
      allOf:
        - $ref: '#/components/schemas/CubegenConfig'
    CubegenInfo:
      type: object
      properties:
        dataset_descriptor:
          $ref: '#/components/schemas/DatasetDescriptor'
        size_estimation:
          $ref: '#/components/schemas/SizeEstimation'
        cost_estimation:
          $ref: '#/components/schemas/CostEstimation'
        result:
          type: object
    CubegenConfig:
      properties:
        input_configs:
          items:
            $ref: '#/components/schemas/CubegenConfigInputConfig'
          type: array
        input_config:
          $ref: '#/components/schemas/CubegenConfigInputConfig'
        cube_config:
          $ref: '#/components/schemas/CubegenConfigCubeConfig'
        output_config:
          $ref: '#/components/schemas/CubegenConfigOutputConfig'
        code_config:
          $ref: '#/components/schemas/CubegenConfigCodeConfig'
      required:
        - cube_config
        - output_config
      type: object
    Callback:
      required:
        - state
        - sender
      type: object
      properties:
        state:
          type: object
          properties:
            label:
              type: string
            total_work:
              type: number
            error:
              oneOf:
                - type: string
                - type: boolean
            progress:
              type: number
            elapsed:
              type: number
        sender:
          type: string
    CubegenStatus:
      type: object
      required:
        - cubegen_id
        - status
      properties:
        cubegen_id:
          type: string
        progress:
          $ref: '#/components/schemas/Callback'
        output:
          items:
            type: string
          type: array
        result:
          type: object
        status:
          type: object
          required:
            - active
            - completion_time
            - failed
            - start_time
            - succeeded
          properties:
            active:
              oneOf:
                - type: integer
                - type: boolean
              nullable: true
            start_time:
              format: date-time
              type: string
            failed:
              oneOf:
                - type: integer
                - type: boolean
              nullable: true
            succeeded:
              oneOf:
                - type: integer
                - type: boolean
              nullable: true
            completion_time:
              format: date-time
              type: string
    Collection:
      properties:
        collection_id:
          type: string
        name:
          type: string
        database:
          type: string
        href:
          type: string
          format: uri
        defaultStyle:
          type: string
          format: uri
        wmsUri:
          type: string
          format: uri
    OauthToken:
      example:
        audience: audience
        grant_type: grant_type
        client_secret: client_secret
        client_id: client_id
      properties:
        client_id:
          type: string
        client_secret:
          type: string
        audience:
          type: string
        grant_type:
          type: string
      required:
        - audience
        - client_id
        - client_secret
      type: object
    CubegenConfigOpenParams:
      properties:
        tile_size:
          items:
            type: number
          type: array
      type: object
    CubegenConfigInputConfig:
      properties:
        store_id:
          type: string
        data_id:
          type: string
        open_params:
          $ref: '#/components/schemas/CubegenConfigOpenParams'
      required:
        - data_id
        - store_id
      type: object
    CubegenConfigCodeConfig:
      type: object
      properties:
        file_set:
          type: object
          properties:
            path:
              type: string
        callable_ref:
          type: string
        callable_params:
          type: object
          additionalProperties: true
        inline_code:
          type: string
    CubegenConfigCubeConfig:
      properties:
        variable_names:
          items:
            type: string
          type: array
        crs:
          type: string
        spatial_res:
          type: number
        chunks:
          type: object
          nullable: true
          additionalProperties:
            type: integer
            nullable: true
            minimum: 1
        bbox:
          items:
            maxItems: 4
            minItems: 4
            type: number
          type: array
        time_range:
          items:
            format: date
            maxItems: 2
            minItems: 1
            type: string
            nullable: true
          type: array
        time_period:
          type: string
          nullable: true
      required:
        - bbox
        - crs
        - spatial_res
        - time_range
        - variable_names
      type: object
    CubegenConfigOutputConfig:
      properties:
        store_id:
          type: string
        store_params:
          type: object
      required:
        - store_id
      type: object
    CostEstimation:
      type: object
      properties:
        required:
          type: integer
          default: 1
        available:
          type: integer
          default: 1
        limit:
          type: integer
          default: 1
    SizeEstimation:
      type: object
      properties:
        image_size:
          type: array
          items:
            type: integer
        tile_size:
          type: array
          items:
            type: integer
        num_tiles:
          type: array
          items:
            type: integer
        num_variables:
          type: integer
        num_requests:
          type: integer
        num_bytes:
          type: integer
    DatasetDescriptor:
      type: object
      properties:
        type_specifier:
          type: string
        data_id:
          type: string
        crs:
          type: string
        bbox:
          type: array
          items:
            type: number
            format: int32
          default: [0, 0, 0, 0]
        time_range:
          type: array
          items:
            type: string
            format: date
          default: ["2020-01-01", "2020-01-15"]
        time_period:
          type: string
          default: "1D"
        data_vars:
          type: object
        spatial_res:
          type: number
          format: float
          default: 0.01
        dims:
          type: object
          properties:
            time:
              type: integer
              default: 1
            lat:
              type: number
              format: float
            lon:
              type: number
              format: float
            x:
              type: number
              format: float
            y:
              type: number
              format: float
    Service:
      type: object
      required:
        - name
        - status
        - message
      properties:
        name:
          type: string
        status:
          type: string
          default: "Ready"
          enum:
            - "Ready"
            - "Suspended"
            - "Error"
        message:
          type: string
          default: "Service OK"
    Subscription:
      type: object
      required:
        - email
        - guid
      properties:
        subscription_id:
          type: string
          format: uuid
        plan:
          type: string
          default: "free"
        email:
          type: string
          format: email
        guid:
          type: string
          format: uuid
        client_id:
          type: string
        client_secret:
          type: string
          format: password
        start_date:
          type: string
          format: 'date'
        units:
          type: number
          format: double
          default: 0.0
        unit:
          type: string
          enum:
            - 'punits'
            - 'cells'
            - 'n/a'
          default: 'punits'
  securitySchemes:
    oAuthorization:
      description: This API uses Oauth 2 with the implicit grant flow.
      flows:
        clientCredentials:
          scopes:
            manage_cubegens: Read cubegen status and result
          tokenUrl: https://xcube-users.brockmann-consult.de/auth/realms/xcube/protocol/openid-connect/token
      type: oauth2
      x-tokenInfoFunc: xcube_hub.controllers.authorization.check_oauthorization
      x-scopeValidateFunc: xcube_hub.controllers.authorization.validate_scope_oauthorization