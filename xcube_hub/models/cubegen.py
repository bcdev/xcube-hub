# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from xcube_hub.models.base_model_ import Model
from xcube_hub.models.cubegen_status import CubeGenStatus  # noqa: F401,E501
from xcube_hub import util


class CubeGen(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, cubegen_id: str=None, status: CubeGenStatus=None):  # noqa: E501
        """CubeGen - a model defined in Swagger

        :param cubegen_id: The cubegen_id of this CubeGen.  # noqa: E501
        :type cubegen_id: str
        :param status: The status of this CubeGen.  # noqa: E501
        :type status: CubeGenStatus
        """
        self.swagger_types = {
            'cubegen_id': str,
            'status': CubeGenStatus
        }

        self.attribute_map = {
            'cubegen_id': 'cubegen_id',
            'status': 'status'
        }
        self._cubegen_id = cubegen_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'CubeGen':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CubeGen of this CubeGen.  # noqa: E501
        :rtype: CubeGen
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cubegen_id(self) -> str:
        """Gets the cubegen_id of this CubeGen.


        :return: The cubegen_id of this CubeGen.
        :rtype: str
        """
        return self._cubegen_id

    @cubegen_id.setter
    def cubegen_id(self, cubegen_id: str):
        """Sets the cubegen_id of this CubeGen.


        :param cubegen_id: The cubegen_id of this CubeGen.
        :type cubegen_id: str
        """
        if cubegen_id is None:
            raise ValueError("Invalid value for `cubegen_id`, must not be `None`")  # noqa: E501

        self._cubegen_id = cubegen_id

    @property
    def status(self) -> CubeGenStatus:
        """Gets the status of this CubeGen.


        :return: The status of this CubeGen.
        :rtype: CubeGenStatus
        """
        return self._status

    @status.setter
    def status(self, status: CubeGenStatus):
        """Sets the status of this CubeGen.


        :param status: The status of this CubeGen.
        :type status: CubeGenStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")  # noqa: E501

        self._status = status
