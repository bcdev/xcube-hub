# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from xcube_hub.models.base_model_ import Model
from xcube_hub import util

from xcube_hub.models.cubegen_status import CubegenStatus  # noqa: E501


class Cubegen(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cubegen_id=None, status=None):  # noqa: E501
        """Cubegen - a model defined in OpenAPI

        :param cubegen_id: The cubegen_id of this Cubegen.  # noqa: E501
        :type cubegen_id: str
        :param status: The status of this Cubegen.  # noqa: E501
        :type status: CubegenStatus
        """
        self.openapi_types = {
            'cubegen_id': str,
            'status': CubegenStatus
        }

        self.attribute_map = {
            'cubegen_id': 'cubegen_id',
            'status': 'status'
        }

        self._cubegen_id = cubegen_id
        self._status = status

    @classmethod
    def from_dict(cls, dikt) -> 'Cubegen':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Cubegen of this Cubegen.  # noqa: E501
        :rtype: Cubegen
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cubegen_id(self):
        """Gets the cubegen_id of this Cubegen.


        :return: The cubegen_id of this Cubegen.
        :rtype: str
        """
        return self._cubegen_id

    @cubegen_id.setter
    def cubegen_id(self, cubegen_id):
        """Sets the cubegen_id of this Cubegen.


        :param cubegen_id: The cubegen_id of this Cubegen.
        :type cubegen_id: str
        """
        if cubegen_id is None:
            raise ValueError("Invalid value for `cubegen_id`, must not be `None`")  # noqa: E501

        self._cubegen_id = cubegen_id

    @property
    def status(self):
        """Gets the status of this Cubegen.


        :return: The status of this Cubegen.
        :rtype: CubegenStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Cubegen.


        :param status: The status of this Cubegen.
        :type status: CubegenStatus
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")  # noqa: E501

        self._status = status
