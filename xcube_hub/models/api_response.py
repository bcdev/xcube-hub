# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from xcube_hub.models.base_model_ import Model
from xcube_hub import util


class ApiResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, message: str = None, output: object = None):  # noqa: E501
        """ApiResponse - a model defined in Swagger

        :param message: The message of this ApiResponse.  # noqa: E501
        :type message: str
        :param output: The output of this ApiResponse.  # noqa: E501
        :type output: object
        """
        self.swagger_types = {
            'message': str,
            'output': object
        }

        self.attribute_map = {
            'message': 'message',
            'output': 'output'
        }
        self._message = message
        self._output = output

    @classmethod
    def from_dict(cls, dikt) -> 'ApiResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ApiResponse of this ApiResponse.  # noqa: E501
        :rtype: ApiResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self) -> str:
        """Gets the message of this ApiResponse.


        :return: The message of this ApiResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this ApiResponse.


        :param message: The message of this ApiResponse.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")  # noqa: E501

        self._message = message

    @property
    def output(self) -> object:
        """Gets the output of this ApiResponse.


        :return: The output of this ApiResponse.
        :rtype: object
        """
        return self._output

    @output.setter
    def output(self, output: object):
        """Sets the output of this ApiResponse.


        :param output: The output of this ApiResponse.
        :type output: object
        """

        self._output = output
