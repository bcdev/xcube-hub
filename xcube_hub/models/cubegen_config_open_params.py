# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from xcube_hub.models.base_model_ import Model
from xcube_hub import util


class CubegenConfigOpenParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tile_size=None):  # noqa: E501
        """CubegenConfigOpenParams - a model defined in OpenAPI

        :param tile_size: The tile_size of this CubegenConfigOpenParams.  # noqa: E501
        :type tile_size: List[float]
        """
        self.openapi_types = {
            'tile_size': List[float]
        }

        self.attribute_map = {
            'tile_size': 'tile_size'
        }

        self._tile_size = tile_size

    @classmethod
    def from_dict(cls, dikt) -> 'CubegenConfigOpenParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CubegenConfig_open_params of this CubegenConfigOpenParams.  # noqa: E501
        :rtype: CubegenConfigOpenParams
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tile_size(self):
        """Gets the tile_size of this CubegenConfigOpenParams.


        :return: The tile_size of this CubegenConfigOpenParams.
        :rtype: List[float]
        """
        return self._tile_size

    @tile_size.setter
    def tile_size(self, tile_size):
        """Sets the tile_size of this CubegenConfigOpenParams.


        :param tile_size: The tile_size of this CubegenConfigOpenParams.
        :type tile_size: List[float]
        """

        self._tile_size = tile_size
