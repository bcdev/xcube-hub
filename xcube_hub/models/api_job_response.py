# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from xcube_hub.models.base_model_ import Model
from xcube_hub.models.api_response import ApiResponse  # noqa: F401,E501
from xcube_hub.models.job import Job  # noqa: F401,E501
from xcube_hub import util


class ApiJobResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, message: str=None, output: object=None, result: Job=None):  # noqa: E501
        """ApiJobResponse - a model defined in Swagger

        :param message: The message of this ApiJobResponse.  # noqa: E501
        :type message: str
        :param output: The output of this ApiJobResponse.  # noqa: E501
        :type output: object
        :param result: The result of this ApiJobResponse.  # noqa: E501
        :type result: Job
        """
        self.swagger_types = {
            'message': str,
            'output': object,
            'result': Job
        }

        self.attribute_map = {
            'message': 'message',
            'output': 'output',
            'result': 'result'
        }
        self._message = message
        self._output = output
        self._result = result

    @classmethod
    def from_dict(cls, dikt) -> 'ApiJobResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ApiJobResponse of this ApiJobResponse.  # noqa: E501
        :rtype: ApiJobResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def message(self) -> str:
        """Gets the message of this ApiJobResponse.


        :return: The message of this ApiJobResponse.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message: str):
        """Sets the message of this ApiJobResponse.


        :param message: The message of this ApiJobResponse.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")  # noqa: E501

        self._message = message

    @property
    def output(self) -> object:
        """Gets the output of this ApiJobResponse.


        :return: The output of this ApiJobResponse.
        :rtype: object
        """
        return self._output

    @output.setter
    def output(self, output: object):
        """Sets the output of this ApiJobResponse.


        :param output: The output of this ApiJobResponse.
        :type output: object
        """

        self._output = output

    @property
    def result(self) -> Job:
        """Gets the result of this ApiJobResponse.


        :return: The result of this ApiJobResponse.
        :rtype: Job
        """
        return self._result

    @result.setter
    def result(self, result: Job):
        """Sets the result of this ApiJobResponse.


        :param result: The result of this ApiJobResponse.
        :type result: Job
        """
        if result is None:
            raise ValueError("Invalid value for `result`, must not be `None`")  # noqa: E501

        self._result = result
