# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from xcube_hub.models.base_model_ import Model
from xcube_hub.models.user import User
from xcube_hub import util

from xcube_hub.models.user import User  # noqa: E501

class ApiUsersResponseAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, result=None):  # noqa: E501
        """ApiUsersResponseAllOf - a model defined in OpenAPI

        :param result: The result of this ApiUsersResponseAllOf.  # noqa: E501
        :type result: List[User]
        """
        self.openapi_types = {
            'result': List[User]
        }

        self.attribute_map = {
            'result': 'result'
        }

        self._result = result

    @classmethod
    def from_dict(cls, dikt) -> 'ApiUsersResponseAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ApiUsersResponse_allOf of this ApiUsersResponseAllOf.  # noqa: E501
        :rtype: ApiUsersResponseAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def result(self):
        """Gets the result of this ApiUsersResponseAllOf.


        :return: The result of this ApiUsersResponseAllOf.
        :rtype: List[User]
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this ApiUsersResponseAllOf.


        :param result: The result of this ApiUsersResponseAllOf.
        :type result: List[User]
        """
        if result is None:
            raise ValueError("Invalid value for `result`, must not be `None`")  # noqa: E501

        self._result = result
