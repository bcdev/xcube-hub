# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from xcube_hub.models.base_model_ import Model
from xcube_hub import util

from xcube_hub.models.cubegen_config_code_config_file_set import CubegenConfigCodeConfigFileSet  # noqa: E501


class CubegenConfigCodeConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file_set=None, callable_ref=None, callable_params=None, inline_code=None):  # noqa: E501
        """CubegenConfigCodeConfig - a model defined in OpenAPI

        :param file_set: The file_set of this CubegenConfigCodeConfigFileSet.  # noqa: E501
        :type file_set: CubegenConfigCodeConfigFileSet
        :param callable_ref: The callable_ref of this CubegenConfigCodeConfig.  # noqa: E501
        :type callable_ref: str
        :param callable_params: The callable_params of this CubegenConfigCodeConfig.  # noqa: E501
        :type callable_params: Dict[str, object]
        :param inline_code: The inline_code of this CubegenConfigCodeConfig.  # noqa: E501
        :type inline_code: Dict[str, object]
        """
        self.openapi_types = {
            'file_set': CubegenConfigCodeConfigFileSet,
            'callable_ref': str,
            'callable_params': Dict[str, object],
            'inline_code': str
        }

        self.attribute_map = {
            'file_set': 'file_set',
            'callable_ref': 'callable_ref',
            'callable_params': 'callable_params',
            'inline_code': 'inline_code'
        }

        self._file_set = file_set
        self._callable_ref = callable_ref
        self._callable_params = callable_params
        self._inline_code = inline_code

    @classmethod
    def from_dict(cls, dikt) -> 'CubegenConfigCodeConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CubegenConfigCodeConfig of this CubegenConfigCodeConfig.  # noqa: E501
        :rtype: CubegenConfigCodeConfig
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file_set(self):
        """Gets the file_set of this CubegenConfigCodeConfig.


        :return: The file_set of this CubegenConfigCodeConfig.
        :rtype: CubegenConfigCodeConfigFileSet
        """
        return self._file_set

    @file_set.setter
    def file_set(self, file_set):
        """Sets the file_set of this CubegenConfigCodeConfig.


        :param file_set: The file_set of this CubegenConfigCodeConfig.
        :type file_set: CubegenConfigCodeConfigFileSet
        """

        self._file_set = file_set

    @property
    def callable_ref(self):
        """Gets the callable_ref of this CubegenConfigCodeConfig.


        :return: The callable_ref of this CubegenConfigCodeConfig.
        :rtype: str
        """
        return self._callable_ref

    @callable_ref.setter
    def callable_ref(self, callable_ref):
        """Sets the callable_ref of this CubegenConfigCodeConfig.


        :param callable_ref: The callable_ref of this CubegenConfigCodeConfig.
        :type callable_ref: str
        """

        self._callable_ref = callable_ref

    @property
    def callable_params(self):
        """Gets the callable_params of this CubegenConfigCodeConfig.


        :return: The callable_params of this CubegenConfigCodeConfig.
        :rtype: Dict[str, object]
        """
        return self._callable_params

    @callable_params.setter
    def callable_params(self, callable_params):
        """Sets the callable_params of this CubegenConfigCodeConfig.


        :param callable_params: The callable_params of this CubegenConfigCodeConfig.
        :type callable_params: Dict[str, object]
        """

        self._callable_params = callable_params

    @property
    def inline_code(self):
        """Gets the inline_code of this CubegenConfigCodeConfig.


        :return: The inline_code of this CubegenConfigCodeConfig.
        :rtype: str
        """
        return self.inline_code

    @inline_code.setter
    def inline_code(self, inline_code):
        """Sets the inline_code of this CubegenConfigCodeConfig.


        :param inline_code: The callable_params of this CubegenConfigCodeConfig.
        :type inline_code: str
        """

        self._inline_code = inline_code
